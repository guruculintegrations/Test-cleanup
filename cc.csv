Audit Date = 00/00/0000 00:00:00    Employee ID = ****    Event Day = 00/00/0000    Machine ID = 04444***        Resource Name = Windows Security    Event Type = 3               eventcode = 4104     Task Category = Execute a Remote Command     commanddetails = Creating Scriptblock text (6 of 6):;tion_value; IsValuePresent = $true}; } else {; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WakeOnMagicPacket'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}; }; $__cmdletization_methodParameters.Add($__cmdletization_methodParameter);; [object]$__cmdletization_defaultValue = $null; [object]$__cmdletization_defaultValueIsPresent = $false; if ($PSBoundParameters.ContainsKey('WakeOnPattern')) {; [object]$__cmdletization_value = ${WakeOnPattern}; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WakeOnPattern'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}; } else {; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WakeOnPattern'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}; }; $__cmdletization_methodParameters.Add($__cmdletization_methodParameter);; [object]$__cmdletization_defaultValue = $null; [object]$__cmdletization_defaultValueIsPresent = $false; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}; $__cmdletization_methodParameters.Add($__cmdletization_methodParameter);; [object]$__cmdletization_defaultValue = $null; [object]$__cmdletization_defaultValueIsPresent = $false; if ($PSBoundParameters.ContainsKey('NoRestart')) {; [object]$__cmdletization_value = ${NoRestart}; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:NoRestart'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}; } else {; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:NoRestart'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}; }; $__cmdletization_methodParameters.Add($__cmdletization_methodParameter);; [object]$__cmdletization_defaultValue = $null; [object]$__cmdletization_defaultValueIsPresent = $false; if ($PSBoundParameters.ContainsKey('PassThru')) {; [object]$__cmdletization_value = ${PassThru}; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}; } else {; $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}; }; $__cmdletization_methodParameters.Add($__cmdletization_methodParameter);; $__cmdletization_returnValue = $null; $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Disable', $__cmdletization_methodParameters, $__cmdletization_returnValue); $__cmdletization_passThru = $false; if ($PSBoundParameters.ContainsKey('InputObject')) {; foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }; } else {; $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru); }; }; };; }; }; catch; {; $__cmdletization_exceptionHasBeenThrown = $true; throw; }; }; ;; End {; try; {; if (-not $__cmdletization_exceptionHasBeenThrown); {; $__cmdletization_objectModelWrapper.EndProcessing(); }; }; catch; {; throw; }; };; # .EXTERNALHELP MSFT_NetAdapterPowerManagement.cmdletDefinition.cdxml-Help.xml;};Microsoft.PowerShell.Core\Export-ModuleMember -Function 'Disable-NetAdapterPowerManagement' -Alias '*'; ;;;     processpath =     scriptblockid =     OpCode = On create calls     sid = S-1-5-21-1139979270-433438004-2793414566-2618
